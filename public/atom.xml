<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nekohuan.cyou</id>
    <title>khh.log</title>
    <updated>2025-02-03T15:36:31.159Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>Connor Kuo</name>
        <email>touch@rnmeow.com</email>
        <uri>https://nekohuan.cyou</uri>
    </author>
    <link rel="alternate" href="https://nekohuan.cyou"/>
    <link rel="self" href="https://nekohuan.cyou/atom.xml"/>
    <subtitle>$ curl -i https://nekohuan.cyou</subtitle>
    <logo>https://nekohuan.cyou/avatar_neo.png</logo>
    <icon>https://nekohuan.cyou/favicon.ico</icon>
    <rights>Copyright © 2023, 2024, Connor Kuo, licensed under CC BY-NC-SA 4.0</rights>
    <entry>
        <title type="html"><![CDATA[2022 年：我的 Chromium 從 A 到 Z]]></title>
        <id>https://nekohuan.cyou/post/2022-chromium-a-to-z</id>
        <link href="https://nekohuan.cyou/post/2022-chromium-a-to-z"/>
        <updated>2023-01-26T22:40:00.000Z</updated>
        <summary type="html"><![CDATA[將 A-Z 逐一輸入到 Chromium 的網址列，會自動完成哪些網域呢？靈感來源：Sukka's Blog 和 Mare_Infinitus 的同名文章。]]></summary>
        <content type="html"><![CDATA[<p>將 A-Z 逐一輸入到 Chromium 的網址列，會自動完成哪些網域呢？</p><p>靈感來源： <a href="https://blog.skk.moe/post/2022-browser-from-a-to-z/">https://blog.skk.moe/post/2022-browser-from-a-to-z/</a> 和 <a href="https://www.notion.so/wsblockg/2022-Firefox-A-Z-98ec0ff852f44cb0891ce9e65e4e4523">https://www.notion.so/wsblockg/2022-Firefox-A-Z-98ec0ff852f44cb0891ce9e65e4e4523</a></p><h2>A is for</h2><h3>azul.com</h3><p>當初入坑 Minecraft（當然有 3D 暈那是後話了），從這裡載的 Java OpenJDK。</p><h2>B is for</h2><h3>bitbucket.org</h3><p>忘記什麼原因註冊的了，反正現在用不到。</p><h2>C is for</h2><h3>chat.openai.com</h3><p>ChatGPT——一個基於 Machine Learning 的聊天機器人，偶爾用來程式碼偵錯什麼的（真的是好工具...感覺 AI 離統治世界不遠了（怕</p><h3>conventionalcommits.org</h3><blockquote><p>A specification for adding human and machine readable meaning to commit messages</p></blockquote><p>入門規範化的 Git commits 很好的學習資源（雖然寫出來的 Commit 還是四不像</p><h2>D is for</h2><h3>dash.cloudflare.com</h3><p>Cloudflare Dashboard。你現在看到的這整個站點都是搭在 Cloudflare 上的（Cloudflare Pages + DNS），暫時不會搬家（新網站應該會用 Vercel？）。</p><h2>E is for</h2><h3>emojipedia.com</h3><p><a href="https://chewing.im/">新酷音輸入法</a><strong>沒有</strong>內建的 Emoji 輸入，每次用都要複製貼上（偷抱怨</p><h2>F is for</h2><h3>fontawesome.com</h3><p>Font Awesome——前端 Coder 的好朋友。</p><h3>fonts.google.com</h3><p>居然又是 Webfont 服務，雖然中文只有 Noto Sans 跟 Serif 兩種，但英文字體的豐富度真的...很殼以</p><h2>G is for</h2><h3>github.com</h3><p>世界最大的<del>同性交友網站</del>Git 託管服務</p><h2>H is for</h2><h3>hcaptcha.com</h3><p>一個驗證碼服務。（然後我不知道為什麼它會在這裡</p><h2>I is for</h2><h3>instagram.com</h3><p>其實我很少在電腦上用 Ins，所以也這個東西在這裡，<del>我也不知道為啥</del></p><h3>isitdownorjust.me</h3><p>檢查網站是否 Down 用的，<del>最常 Check 的網站：WayBackMachine</del></p><h2>J is for</h2><h3>jetbrains.com</h3><p>才想起來還有 JetBrains 的 Student DevPack 沒用（現在日用 VS Code，滿好的，暫時不會換</p><h2>K is for</h2><h3>kmt.org.tw</h3><p>中國國民黨全球資訊網...？？？？？？？</p><h2>L is for</h2><h3>localhost:&lt;port&gt;</h3><p>嗯，對。</p><h2>M is for</h2><h3>mongodb.com</h3><p>這個網站的舊架構用的 Tech Stack 之一，但偶爾會 delay，所以就遷移到 <a href="https://docs.github.com/en/rest">GitHub REST API</a> 去了。</p><h2>N is for</h2><h3>nekohuan.cyou</h3><p><strong>你現在就在這裡。</strong> 或許之後有時間再來寫一個完整的開發過程文章？</p><h3>nuxt.com</h3><p>這個網站用的 Tech Stack 之一，滿強大的 SSR 框架，大概可以理解成 Next.js for Vue？</p><h3>npmjs.com</h3><p>NPM 官方套件庫，找一些套件用還蠻方便的。</p><h2>O is for</h2><p>從缺。</p><h2>P is for</h2><h3>proton.me</h3><p>日用的 E-mail 服務提供商。主要是用習慣了（陪伴了我 3 年），2022 終於升級成了 Paid 版。</p><h2>R is for</h2><h3>railway.app</h3><p>一個 Web 服務託管提供商，速度提升有感。</p><h2>S is for</h2><h3>startpage.com</h3><p>2022 才瞭解到的一個標榜隱私的搜尋引擎，據說後端是用 Google，目前日用中。</p><p>（<em>ps. 而且還沒廣告，欸嘿</em></p><h3>surfshark.com</h3><p>YouTube 置入很兇的 VPN，試了試之後發現不怎麼樣（而且也用不到），就退訂了。</p><h2>T is for</h2><h3>translate.google.com</h3><p>Google 翻譯，在場有人不知道的嗎？（笑</p><h3>tailwindcss.com</h3><p>又雙叒叕是這個網站的 Tech Stack。（Utility-first CSS 真的是用過就回不去了，大推）</p><h2>U is for</h2><h3>unpkg.com</h3><p>一個好用的 NPM CDN 服務。（以前通常用 jsDelivr）</p><h3>upload.cc</h3><p>好用的圖床。</p><h2>V is for</h2><h3>vercel.com</h3><p>前端應用程式的 Serverless 平台，內建了對於諸多框架的支持（同時也是 Next.js 的開發者）。</p><h2>W is for</h2><p>從缺。</p><h2>Y is for</h2><h3>youtube.com</h3><p>基本上天天用的網站，聽歌看影片樣樣行（？</p><h2>Z is for</h2><h3>zh.wikipedia.org/&lt;條目&gt;</h3><p>中文維基百科。（但是搜尋結果老是跳轉行動版網站，也不知道怎麼搞的）</p>]]></content>
        <author>
            <name>Connor Kuo</name>
            <email>touch@rnmeow.com</email>
            <uri>https://nekohuan.cyou</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bluesky——去中心化社群的終極型態]]></title>
        <id>https://nekohuan.cyou/post/migrate-to-bluesky</id>
        <link href="https://nekohuan.cyou/post/migrate-to-bluesky"/>
        <updated>2025-02-03T23:25:00.000Z</updated>
        <summary type="html"><![CDATA[喬遷誌喜。自從伊隆·馬斯克（Elon Musk）收購 Twitter，改名 X 後，社群的風氣一天比一天要糟。暫且不提強硬地抹煞「Twitter」商標；不消停的仇恨言論、選擇性的內容審核、靠北搶錢的 Twitter Blue（現 X Premium），無一不讓人有滾去新社群媒體的想法。]]></summary>
        <content type="html"><![CDATA[<p>喬遷誌喜。</p><p>自從伊隆·馬斯克（Elon Musk）收購 Twitter，改名 X 後，社群的風氣一天比一天要糟。暫且不提強硬地抹煞「Twitter」商標；不消停的仇恨言論、<strong>選擇性</strong>的內容審核、靠北搶錢的 Twitter Blue（現 X Premium），無一不讓人有*滾*去新社群媒體的想法。</p><h2>Threads</h2><p><a href="https://threads.net">Threads</a> 應該是目前最夯的 X 替代品。然而，其依附於 Facebook（*元*為 Meta）、與 Instagram 帳號互通（雖然可以設定隱藏圖示，但治標不治本）。且，Threads 側重於「大家都在看什麼」，而非「使用者想要什麼」——以「台灣使用者」，而非個人為單位——在推荐內容。</p><p>Threads 的負責人 Adam Mosseri 倒是 po 了 <a href="https://www.fixthreads.net/@mosseri/post/C3IjTzGvk6_">一篇串文</a>，預計改革 Threads 的演算法。可惜，我們並不總是能信任 Meta 產品尊重隱私權的程度；最近，Meta Platforms, Inc. 這家 <a href="https://www.statista.com/statistics/271258/facebooks-advertising-revenue-worldwide/">一年靠廣告賺了 1,600 億美元</a> 的公司，也 <a href="https://www.socialmediatoday.com/news/meta-launches-test-threads-ads/738317/">著手在 Threads 添加廣告</a> 了。雖然，我並不會因此離開 Threads——就我而言，Threads 應該作為一個用於「跟上話題」的*新聞來源*，而非社群媒體。</p><p>對了，Threads 團隊曾在 2024 年 1 月 11 日的 <a href="http://plasticbag.org/archives/2024/01/how-threads-will-integrate-with-the-fediverse/">一個採訪</a>（未加密 HTTP 警告）中提出一個時間軸，揭示 ActivityPub 協議支援、整合聯邦宇宙的大致時程——最接近完全體的時程安排在「2024 年末」。然而，真正被發布的功能，仍僅止於第一項：讓聯邦宇宙使用者可以追蹤 Threads 使用者。今夕是何年？比南鐵地下化還慢。</p><h2>Mastodon、聯邦宇宙</h2><p>提到「逃離 X，重拾通訊自由」，第一印象便是基於聯邦宇宙的 <a href="https://joinmastodon.org/">Mastodon</a>。我選擇在 <a href="https://g0v.social">g0v 零時政府的站台</a> 上註冊了 <a href="https://g0v.social/@rm">一個帳號</a>。然而，Mastodon 的介面...... 個人無法接受，無論 Web 或現存的行動端皆然。</p><p>當然，建基於聯邦宇宙的平台遠不止 Mastodon。<a href="https://misskey-hub.net/tw/">Misskey</a> 或許是一個不錯的主意——由日本人開發，美感應該是好得多——等一下，似乎有點太多了：花俏。</p><p>自行從頭撰寫一個最小、堪用的 ActivityPub 實現，或許可以是個想法。但，我手頭上太多專案要做了。真要這麼搞，五年後有機會吧？</p><p>其次，在 Mastodon 近乎「不算」的演算法（正好和 Threads 呈現兩個極端）下，拓展人際圈、發掘熱門話題，幾乎是*不可能的任務*。若想自行尋求解決方案，很抱歉：Mastodon——或者更精確點說，整個聯邦宇宙——尚未提供簡易、原生支援的自訂演算法介面（Interface）。</p><h2>向前一步，探訪 Bluesky</h2><p>如果…… 拋棄 ActivityPub 呢？或許，現在正是時候來看看 <a href="https://bsky.app/">Bluesky</a> 和 <a href="https://atproto.com/">AT Protocol</a>，這對十分合我胃口，卻「低調」一些的存在。這麼說吧，有別於 Meta 大張旗鼓、咄咄逼人的臉色，Bluesky 顯得溫和許多。</p><p>AT Protocol 的設計哲學要更注重去中心化和自主控制；因此，採用了一種更「模組化」的架構，讓開發者和使用者有機會自訂社群體驗。這意味著，在更多樣化的社群型態之後，我們還將有權*直面黑暗*，碰觸那曾經是個黑盒子的……</p><p>演算法。</p><p>就以最直觀的部分來看，與 ActivityPub 相比，AT Protocol 為「自訂演算法」提供了一拖拉庫（tho͘-lá-khuh；トラック）的微調選項。使用者（或開發者）可以根據自己的需求和偏好，完全自主地控制推荐清單（稱為「動態源」；Feed）。而且，Bluesky 官方 <a href="https://github.com/bluesky-social/feed-generator">選用 TypeScript 作為設定動態源的預設語言</a>！Web 開發者<del>（如我）</del>可以近乎無壓力地「自建房」。</p><p>更重要的是，對我來說，「去中心化」應該像衛生棉——有感卻無感。我們需要的是資料控制權握在手中的安全感，而非各伺服器間壁壘分明的不便。使用者將自己的資料儲存在個人資料伺服器（PDS）上，進而保留完整的掌控權；Bluesky 平台本身，則藉由中繼節點（Relay Node）來收集、統一廣播各接入該節點伺服器的資料，實現去中心化的社交網路——當然，這個中繼節點，同樣可以自建。與形似 P2P 的 ActivityPub 一比，高下立判。</p><p>因此，抱著對未來的期望，我幾乎在讀完文件當下就決定租台伺服器自建 PDS 了。畢竟，若所有使用者都湧向「旗艦伺服器」，則去中心化將形同虛設。經過幾輪比價，淘汰掉一些靈車之後，我看中了 <a href="https://www.vkvm.info/aff/RFLZXQCU">VKVM</a>（超連結含 AFF，請您幫忙一下，感激不盡）——似乎是一家發跡於香港的雲端計算服務公司。（當然，我死都不會把社群伺服器架在香港。）最終，我訂購的是一台 2C / 2G / 20G，位於日本東京的 VPS；每月 35 人民幣，還算中規中矩。</p><p>安裝過程並不複雜，Google 一下，資料滿山滿谷，這裡不再贅述。誠然，理論上，資料控制權依然不在我手上，而是雲端主機的供應商。但，Ubuntu 22.04 LTS 是我親自裝的，我看得到自己的資料存在哪裡、被如何利用。</p><p><img src="https://assets.rnmeow.com/img/2025/02/螢幕擷取畫面 2025-02-03 230828-11115be111a9d404.png "寫這篇文章的當下，我的 Bluesky 個人頁面截圖"" alt="螢幕擷取畫面 2025-02-03 230828.png"></p><p>既然截圖都貼出來了，順便提一下 Bluesky 的 <a href="https://bsky.social/about/blog/4-28-2023-domain-handle-tutorial">Handle 機制</a> 吧。這可能我見過最明智的做法。中心化的社群，ID 分配給誰，由平台說得算——不存在先佔先贏這回事。為了某名人而犧牲小使用者，這種事常有。但，網域屬於誰，是一翻兩瞪眼的事。「網路上的名稱」以網域為核心，只能說是再適切不過了。</p><h2>結語</h2><p>十年河東，十年河西。有沒有可能，個人網誌的風潮又將因去中心化而吹起呢？這世上從來沒有最好，只有最適合使用者的服務。但，我的確十分推薦資訊科技相關人士進駐 Bluesky．高自由度、熟悉的介面、豐富的內容…… 實難讓人有拒絕它的理由。</p><p>無論如何，隨時歡迎造訪（和追蹤）<a href="https://bsky.app/profile/rnmeow.com">我的 Bluesky</a>．願我們某日能——或今日就——在藍天相見。</p>]]></content>
        <author>
            <name>Connor Kuo</name>
            <email>touch@rnmeow.com</email>
            <uri>https://nekohuan.cyou</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 GitHub Actions 構建 Hexo blog]]></title>
        <id>https://nekohuan.cyou/post/gh-actions-blog</id>
        <link href="https://nekohuan.cyou/post/gh-actions-blog"/>
        <updated>2022-05-10T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[由 GitHub 所推出的免費 CI/CD 工具 —— GitHub Actions 上線一段時間了，之前一直想學，卻總是騰不出時間。正好 Blog 需要一個好的構建環境（之前用的 Cloudflare Pages 內建，太慢了），於是就自己寫了個 Workflow 用來構建（網路上的輪子用著不舒服，還是自己寫好），總算是把這個坑給填了。]]></summary>
        <content type="html"><![CDATA[<h2>前言</h2><p>由 GitHub 所推出的免費 CI/CD 工具 —— GitHub Actions 上線一段時間了，之前一直想學，卻總是騰不出時間。  
正好網誌需要一個好的構建環境（之前用的 Cloudflare Pages 內建，太慢了），於是就自己寫了個 Workflow 用來構建（網路上的輪子用著不舒服，還是自己寫好），總算是把這個坑給填了。</p><p>過程盡量會詳細點，不懂的部份歡迎留言區詢問 Owo</p><h2>準備</h2><ol><li>一個有 SSH 環境的 Linux 系統（可以是 WSL）</li><li>一個有 Hexo 網誌原始碼的 GitHub 儲存庫</li><li><strong>非常基礎</strong>的 <a href="https://github.com">GitHub.com</a> 操作知識</li></ol><h2>過程</h2><h3>設定構建用 SSH 金鑰</h3><p>在 Linux 下執行指令： <code>ssh-keygen -f blog-deploy-key -C "DEPLOY ONLY"</code>，像這樣：  
<img src="https://s2.loli.net/2022/05/10/deFSojmYpTl2u6n.png" alt="Generate SSH Key">  
執行 <code>cat ./blog-deploy-key.pub</code>，複製輸出的 SSH 公鑰：  
<img src="https://s2.loli.net/2022/05/10/SroJRWtxcO1dfi7.png" alt="Copy Public Key"></p><p>進入存放網誌原始碼的 <em>GitHub Repo -> Settings -> Deploy Keys</em>：  
<img src="https://s2.loli.net/2022/05/10/uZeksaVvzEtN6d5.png" alt="Deploy Keys' Tab">  
點 <em>Add Deploy Key</em> 按鈕之後貼上剛剛複製的公鑰，兩點注意：</p><p>- <em>Title</em> 填 <code>GH Actions Deploy Key</code> 即可
- <strong><em>Allow Write Access</em> 選項記得打勾！</strong></p><p>填起來大概長這樣：
<img src="https://s2.loli.net/2022/05/10/utwQIWZHM8AaNyG.png" alt="Upload Public Key">  
點 <em>Add Key</em> 完成：  
<img src="https://s2.loli.net/2022/05/10/PH5xkMhKGFf72IC.png" alt="Added Key"></p><p>到剛剛產生 SSH 金鑰的 Linux 系統上執行 <code>cat blog-deploy-key</code>，複製：  
<img src="https://s2.loli.net/2022/05/10/fih9QuYsgW6lZFM.png" alt="Copy Secret Key"></p><p>進入 <em>Settings -> Secrets -> Actions</em>：
<img src="https://s2.loli.net/2022/05/10/9nQJLuAtiMOkeDp.png" alt="Secrets' Tab">  
點 <em>New Repo Secret</em> 按鈕之後貼上剛剛複製的私鑰，Name 輸入 <code>DEPLOY&lt;em&gt;SEC&lt;/em&gt;KEY</code>：  
<img src="https://s2.loli.net/2022/05/10/Lm6NZpRXO5Gwda9.png" alt="Add Secret">  
點 <em>Add Secret</em> 完成：  
<img src="https://s2.loli.net/2022/05/10/px4ktSrsnzO2VmR.png" alt="Added Secret"></p><h3>設定 GitHub Actions</h3><p>複製我寫好的 Workflow 原始碼：</p><p>- <a href="https://gist.github.com/kuohuanhuan/f8481fc98c560975a4557f9bc78509c1">GitHub Gist</a></p><p>進入 <em>Actions</em> 分頁：  
<img src="https://s2.loli.net/2022/05/10/PgUDtn1CJehoArG.png" alt="Actions' Tab">  
點選 <em>Set-up A Workflow Yourself</em> 按鈕，執行以下四步：</p><ol><li>貼上原始碼</li><li>點 <em>Start Commit</em> 按鈕</li><li>貼上 <em>Commit Message</em>: <code>feat(ci/cd): use gh actions to deploy blog</code></li><li>點 <em>Commit New File</em> 完成 Commit</li></ol><p><img src="https://s2.loli.net/2022/05/10/SWQZky2fKIBaeps.png" alt="Paste Secret Key"></p><p>回到 <em>Actions</em> 分頁，點擊正在執行的（或者最新的那個）Workflow：  
<img src="https://s2.loli.net/2022/05/10/SD1EFXKhcfpie5V.png" alt="Actions' Tab Uploaded">  
點 <em>deploy-blog</em>：  
<img src="https://s2.loli.net/2022/05/10/P6wzTACoSeut5Uc.png" alt="Deploy Blog">  
出線上圖中的全部打勾就成功了！</p><h3>使用</h3><p>回到儲存庫的 <em>static</em> 分支：  
<img src="https://s2.loli.net/2022/05/10/vKeqyRDn5xYiEth.png" alt="Static Branch">  
設定 GitHub / Cloudflare Pages 直接使用根目錄的檔案即可。</p><h2>結語</h2><p>這次 DIY GitHub Actions Workflow 算挺成功的，之後會再鑽研得深入點（技能樹 +1 總是好的）</p><p>上面的 Workflow 原始碼如果使用上有任何問題，請留言或私訊通知，感謝～！</p>]]></content>
        <author>
            <name>Connor Kuo</name>
            <email>touch@rnmeow.com</email>
            <uri>https://nekohuan.cyou</uri>
        </author>
    </entry>
</feed>